import telebot
import logging
from pc_controller import PCController
import os
from functools import wraps

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π)
BOT_TOKEN = "YOUR_BOT_TOKEN_HERE"

# ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π Telegram ID)
ADMIN_ID = 123456789  # –í–∞—à Telegram ID

bot = telebot.TeleBot(BOT_TOKEN)
pc_controller = PCController()

# –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
def admin_required(func):
    @wraps(func)
    def wrapper(message):
        if message.from_user.id != ADMIN_ID:
            bot.reply_to(message, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return
        return func(message)
    return wrapper

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def start_command(message):
    welcome_text = """
ü§ñ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ü–ö!

üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:

üñ•Ô∏è *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–æ–π:*
/shutdown - –í—ã–∫–ª—é—á–∏—Ç—å –ü–ö
/restart - –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –ü–ö
/sleep - –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –≤ —Å–ø—è—â–∏–π —Ä–µ–∂–∏–º
/lock - –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —ç–∫—Ä–∞–Ω

üìä *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ:*
/sysinfo - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
/cpu - –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞
/memory - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏
/disk - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞

üîä *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–≤—É–∫–æ–º:*
/volume_up - –£–≤–µ–ª–∏—á–∏—Ç—å –≥—Ä–æ–º–∫–æ—Å—Ç—å
/volume_down - –£–º–µ–Ω—å—à–∏—Ç—å –≥—Ä–æ–º–∫–æ—Å—Ç—å
/mute - –û—Ç–∫–ª—é—á–∏—Ç—å/–≤–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫

üì∑ *–°–∫—Ä–∏–Ω—à–æ—Ç:*
/screenshot - –°–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç —ç–∫—Ä–∞–Ω–∞

üìÅ *–§–∞–π–ª–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞:*
/open_file - –û—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª
/list_files - –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏

üéµ *–ú–µ–¥–∏–∞:*
/play_pause - –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ/–ø–∞—É–∑–∞
/next_track - –°–ª–µ–¥—É—é—â–∏–π —Ç—Ä–µ–∫
/prev_track - –ü—Ä–µ–¥—ã–¥—É—â–∏–π —Ç—Ä–µ–∫

‚ö†Ô∏è *–í–Ω–∏–º–∞–Ω–∏–µ:* –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É!
    """
    bot.reply_to(message, welcome_text, parse_mode='Markdown')

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
@bot.message_handler(commands=['sysinfo'])
@admin_required
def system_info(message):
    try:
        info = pc_controller.get_system_info()
        bot.reply_to(message, f"üñ•Ô∏è *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ:*\n\n{info}", parse_mode='Markdown')
    except Exception as e:
        bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {str(e)}")

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞
@bot.message_handler(commands=['cpu'])
@admin_required
def cpu_usage(message):
    try:
        cpu = pc_controller.get_cpu_usage()
        bot.reply_to(message, f"üî• *–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞:* {cpu}%", parse_mode='Markdown')
    except Exception as e:
        bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ CPU: {str(e)}")

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏
@bot.message_handler(commands=['memory'])
@admin_required
def memory_usage(message):
    try:
        memory = pc_controller.get_memory_usage()
        bot.reply_to(message, f"üß† *–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏:*\n{memory}", parse_mode='Markdown')
    except Exception as e:
        bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–∞–º—è—Ç–∏: {str(e)}")

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞
@bot.message_handler(commands=['disk'])
@admin_required
def disk_usage(message):
    try:
        disk = pc_controller.get_disk_usage()
        bot.reply_to(message, f"üíæ *–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞:*\n{disk}", parse_mode='Markdown')
    except Exception as e:
        bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –¥–∏—Å–∫–µ: {str(e)}")

# –í—ã–∫–ª—é—á–µ–Ω–∏–µ –ü–ö
@bot.message_handler(commands=['shutdown'])
@admin_required
def shutdown_pc(message):
    try:
        pc_controller.shutdown()
        bot.reply_to(message, "üîå –ü–ö –±—É–¥–µ—Ç –≤—ã–∫–ª—é—á–µ–Ω —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥...")
    except Exception as e:
        bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–∫–ª—é—á–µ–Ω–∏—è: {str(e)}")

# –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –ü–ö
@bot.message_handler(commands=['restart'])
@admin_required
def restart_pc(message):
    try:
        pc_controller.restart()
        bot.reply_to(message, "üîÑ –ü–ö –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥...")
    except Exception as e:
        bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏: {str(e)}")

# –°–ø—è—â–∏–π —Ä–µ–∂–∏–º
@bot.message_handler(commands=['sleep'])
@admin_required
def sleep_pc(message):
    try:
        pc_controller.sleep()
        bot.reply_to(message, "üò¥ –ü–ö –ø–µ—Ä–µ–≤–µ–¥–µ–Ω –≤ —Å–ø—è—â–∏–π —Ä–µ–∂–∏–º")
    except Exception as e:
        bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ –≤ —Å–ø—è—â–∏–π —Ä–µ–∂–∏–º: {str(e)}")

# –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —ç–∫—Ä–∞–Ω–∞
@bot.message_handler(commands=['lock'])
@admin_required
def lock_screen(message):
    try:
        pc_controller.lock_screen()
        bot.reply_to(message, "üîí –≠–∫—Ä–∞–Ω –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
    except Exception as e:
        bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —ç–∫—Ä–∞–Ω–∞: {str(e)}")

# –°–∫—Ä–∏–Ω—à–æ—Ç
@bot.message_handler(commands=['screenshot'])
@admin_required
def take_screenshot(message):
    try:
        screenshot_path = pc_controller.take_screenshot()
        with open(screenshot_path, 'rb') as photo:
            bot.send_photo(message.chat.id, photo, caption="üì∑ –°–∫—Ä–∏–Ω—à–æ—Ç —ç–∫—Ä–∞–Ω–∞")
        os.remove(screenshot_path)  # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    except Exception as e:
        bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞: {str(e)}")

# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä–æ–º–∫–æ—Å—Ç—å—é
@bot.message_handler(commands=['volume_up'])
@admin_required
def volume_up(message):
    try:
        pc_controller.volume_up()
        bot.reply_to(message, "üîä –ì—Ä–æ–º–∫–æ—Å—Ç—å —É–≤–µ–ª–∏—á–µ–Ω–∞")
    except Exception as e:
        bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –≥—Ä–æ–º–∫–æ—Å—Ç–∏: {str(e)}")

@bot.message_handler(commands=['volume_down'])
@admin_required
def volume_down(message):
    try:
        pc_controller.volume_down()
        bot.reply_to(message, "üîâ –ì—Ä–æ–º–∫–æ—Å—Ç—å —É–º–µ–Ω—å—à–µ–Ω–∞")
    except Exception as e:
        bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ —É–º–µ–Ω—å—à–µ–Ω–∏—è –≥—Ä–æ–º–∫–æ—Å—Ç–∏: {str(e)}")

@bot.message_handler(commands=['mute'])
@admin_required
def mute_toggle(message):
    try:
        pc_controller.mute_toggle()
        bot.reply_to(message, "üîá –ó–≤—É–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω")
    except Exception as e:
        bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∑–≤—É–∫–∞: {str(e)}")

# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ–¥–∏–∞
@bot.message_handler(commands=['play_pause'])
@admin_required
def play_pause(message):
    try:
        pc_controller.media_play_pause()
        bot.reply_to(message, "‚èØÔ∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ/–ø–∞—É–∑–∞")
    except Exception as e:
        bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º: {str(e)}")

@bot.message_handler(commands=['next_track'])
@admin_required
def next_track(message):
    try:
        pc_controller.media_next()
        bot.reply_to(message, "‚è≠Ô∏è –°–ª–µ–¥—É—é—â–∏–π —Ç—Ä–µ–∫")
    except Exception as e:
        bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç—Ä–µ–∫–∞: {str(e)}")

@bot.message_handler(commands=['prev_track'])
@admin_required
def prev_track(message):
    try:
        pc_controller.media_previous()
        bot.reply_to(message, "‚èÆÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–∏–π —Ç—Ä–µ–∫")
    except Exception as e:
        bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç—Ä–µ–∫–∞: {str(e)}")

# –û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞
@bot.message_handler(commands=['open_file'])
@admin_required
def open_file_command(message):
    msg = bot.reply_to(message, "üìÅ –í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è:")
    bot.register_next_step_handler(msg, process_open_file)

def process_open_file(message):
    try:
        file_path = message.text.strip()
        pc_controller.open_file(file_path)
        bot.reply_to(message, f"‚úÖ –§–∞–π–ª –æ—Ç–∫—Ä—ã—Ç: {file_path}")
    except Exception as e:
        bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞: {str(e)}")

# –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
@bot.message_handler(commands=['list_files'])
@admin_required
def list_files_command(message):
    msg = bot.reply_to(message, "üìÅ –í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:")
    bot.register_next_step_handler(msg, process_list_files)

def process_list_files(message):
    try:
        directory = message.text.strip()
        files = pc_controller.list_files(directory)
        if files:
            file_list = "\n".join(files[:20])  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 20 —Ñ–∞–π–ª–æ–≤
            if len(files) > 20:
                file_list += f"\n... –∏ –µ—â–µ {len(files) - 20} —Ñ–∞–π–ª–æ–≤"
            bot.reply_to(message, f"üìÅ *–§–∞–π–ª—ã –≤ {directory}:*\n\n`{file_list}`", parse_mode='Markdown')
        else:
            bot.reply_to(message, "üìÇ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞ –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
    except Exception as e:
        bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤: {str(e)}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: True)
def unknown_command(message):
    bot.reply_to(message, "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.")

if __name__ == "__main__":
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    try:
        bot.polling(none_stop=True)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞: {e}")
