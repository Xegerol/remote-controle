import telebot
import logging
from pc_controller import PCController
import os
from functools import wraps
import threading
import time

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

class TelegramBot:
    """–ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Telegram –±–æ—Ç–æ–º"""
    
    def __init__(self, bot_token, admin_id):
        self.bot_token = bot_token
        self.admin_id = admin_id
        self.bot = telebot.TeleBot(bot_token)
        self.pc_controller = PCController()
        self.running = False
        self.polling_thread = None
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
        self._register_handlers()
    
    def _register_handlers(self):
        """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥"""
        
        # –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        def admin_required(func):
            @wraps(func)
            def wrapper(message):
                if message.from_user.id != self.admin_id:
                    self.bot.reply_to(message, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
                    return
                return func(message)
            return wrapper

        # –ö–æ–º–∞–Ω–¥–∞ /start
        @self.bot.message_handler(commands=['start'])
        def start_command(message):
            welcome_text = """ü§ñ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ü–ö!

üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:

üñ•Ô∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–æ–π:
/shutdown - –í—ã–∫–ª—é—á–∏—Ç—å –ü–ö
/restart - –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –ü–ö
/sleep - –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –≤ —Å–ø—è—â–∏–π —Ä–µ–∂–∏–º
/lock - –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —ç–∫—Ä–∞–Ω

üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ:
/sysinfo - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
/cpu - –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞
/memory - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏
/disk - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞

üîä –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–≤—É–∫–æ–º:
/volume_up - –£–≤–µ–ª–∏—á–∏—Ç—å –≥—Ä–æ–º–∫–æ—Å—Ç—å
/volume_down - –£–º–µ–Ω—å—à–∏—Ç—å –≥—Ä–æ–º–∫–æ—Å—Ç—å
/mute - –í—ã–∫–ª—é—á–∏—Ç—å/–≤–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫

üéµ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ–¥–∏–∞:
/play_pause - –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ/–ø–∞—É–∑–∞
/next - –°–ª–µ–¥—É—é—â–∏–π —Ç—Ä–µ–∫
/previous - –ü—Ä–µ–¥—ã–¥—É—â–∏–π —Ç—Ä–µ–∫

üì∑ –°–∫—Ä–∏–Ω—à–æ—Ç—ã:
/screenshot - –°–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç

üìÅ –§–∞–π–ª—ã:
/files <–ø—É—Ç—å> - –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ
/open <–ø—É—Ç—å> - –û—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª

üåê –°–µ—Ç—å:
/network - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ç–∏

‚ö†Ô∏è –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!"""
            self.bot.reply_to(message, welcome_text)

        # –ö–æ–º–∞–Ω–¥–∞ /sysinfo
        @self.bot.message_handler(commands=['sysinfo'])
        @admin_required
        def system_info_command(message):
            try:
                info = self.pc_controller.get_system_info()
                self.bot.reply_to(message, f"üñ•Ô∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ:\n\n{info}")
            except Exception as e:
                self.bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {str(e)}")

        # –ö–æ–º–∞–Ω–¥–∞ /cpu
        @self.bot.message_handler(commands=['cpu'])
        @admin_required
        def cpu_command(message):
            try:
                cpu = self.pc_controller.get_cpu_usage()
                self.bot.reply_to(message, f"üî• –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞: {cpu}%")
            except Exception as e:
                self.bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ CPU: {str(e)}")

        # –ö–æ–º–∞–Ω–¥–∞ /memory
        @self.bot.message_handler(commands=['memory'])
        @admin_required
        def memory_command(message):
            try:
                memory = self.pc_controller.get_memory_usage()
                self.bot.reply_to(message, f"üß† –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏:\n{memory}")
            except Exception as e:
                self.bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–∞–º—è—Ç–∏: {str(e)}")

        # –ö–æ–º–∞–Ω–¥–∞ /disk
        @self.bot.message_handler(commands=['disk'])
        @admin_required
        def disk_command(message):
            try:
                disk = self.pc_controller.get_disk_usage()
                self.bot.reply_to(message, f"üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞:\n{disk}")
            except Exception as e:
                self.bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –¥–∏—Å–∫–µ: {str(e)}")

        # –ö–æ–º–∞–Ω–¥–∞ /shutdown
        @self.bot.message_handler(commands=['shutdown'])
        @admin_required
        def shutdown_command(message):
            try:
                self.pc_controller.shutdown()
                self.bot.reply_to(message, "üî¥ –ö–æ–º–ø—å—é—Ç–µ—Ä –±—É–¥–µ—Ç –≤—ã–∫–ª—é—á–µ–Ω —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥!")
            except Exception as e:
                self.bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–∫–ª—é—á–µ–Ω–∏—è: {str(e)}")

        # –ö–æ–º–∞–Ω–¥–∞ /restart
        @self.bot.message_handler(commands=['restart'])
        @admin_required
        def restart_command(message):
            try:
                self.pc_controller.restart()
                self.bot.reply_to(message, "üîÑ –ö–æ–º–ø—å—é—Ç–µ—Ä –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥!")
            except Exception as e:
                self.bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏: {str(e)}")

        # –ö–æ–º–∞–Ω–¥–∞ /sleep
        @self.bot.message_handler(commands=['sleep'])
        @admin_required
        def sleep_command(message):
            try:
                self.pc_controller.sleep()
                self.bot.reply_to(message, "üò¥ –ö–æ–º–ø—å—é—Ç–µ—Ä –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—Å—è –≤ —Å–ø—è—â–∏–π —Ä–µ–∂–∏–º...")
            except Exception as e:
                self.bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ –≤ —Å–ø—è—â–∏–π —Ä–µ–∂–∏–º: {str(e)}")

        # –ö–æ–º–∞–Ω–¥–∞ /lock
        @self.bot.message_handler(commands=['lock'])
        @admin_required
        def lock_command(message):
            try:
                self.pc_controller.lock_screen()
                self.bot.reply_to(message, "üîí –≠–∫—Ä–∞–Ω –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!")
            except Exception as e:
                self.bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —ç–∫—Ä–∞–Ω–∞: {str(e)}")

        # –ö–æ–º–∞–Ω–¥–∞ /screenshot
        @self.bot.message_handler(commands=['screenshot'])
        @admin_required
        def screenshot_command(message):
            try:
                screenshot_path = self.pc_controller.take_screenshot()
                with open(screenshot_path, 'rb') as photo:
                    self.bot.send_photo(message.chat.id, photo)
                os.remove(screenshot_path)
            except Exception as e:
                self.bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞: {str(e)}")

        # –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–≤—É–∫–æ–º
        @self.bot.message_handler(commands=['volume_up'])
        @admin_required
        def volume_up_command(message):
            try:
                self.pc_controller.volume_up()
                self.bot.reply_to(message, "üîä –ì—Ä–æ–º–∫–æ—Å—Ç—å —É–≤–µ–ª–∏—á–µ–Ω–∞!")
            except Exception as e:
                self.bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –≥—Ä–æ–º–∫–æ—Å—Ç–∏: {str(e)}")

        @self.bot.message_handler(commands=['volume_down'])
        @admin_required
        def volume_down_command(message):
            try:
                self.pc_controller.volume_down()
                self.bot.reply_to(message, "üîâ –ì—Ä–æ–º–∫–æ—Å—Ç—å —É–º–µ–Ω—å—à–µ–Ω–∞!")
            except Exception as e:
                self.bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ —É–º–µ–Ω—å—à–µ–Ω–∏—è –≥—Ä–æ–º–∫–æ—Å—Ç–∏: {str(e)}")

        @self.bot.message_handler(commands=['mute'])
        @admin_required
        def mute_command(message):
            try:
                self.pc_controller.mute_toggle()
                self.bot.reply_to(message, "üîá –ó–≤—É–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω!")
            except Exception as e:
                self.bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∑–≤—É–∫–∞: {str(e)}")

        # –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–µ–¥–∏–∞
        @self.bot.message_handler(commands=['play_pause'])
        @admin_required
        def play_pause_command(message):
            try:
                self.pc_controller.media_play_pause()
                self.bot.reply_to(message, "‚èØÔ∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–æ!")
            except Exception as e:
                self.bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º: {str(e)}")

        @self.bot.message_handler(commands=['next'])
        @admin_required
        def next_command(message):
            try:
                self.pc_controller.media_next()
                self.bot.reply_to(message, "‚è≠Ô∏è –°–ª–µ–¥—É—é—â–∏–π —Ç—Ä–µ–∫!")
            except Exception as e:
                self.bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç—Ä–µ–∫–∞: {str(e)}")

        @self.bot.message_handler(commands=['previous'])
        @admin_required
        def previous_command(message):
            try:
                self.pc_controller.media_previous()
                self.bot.reply_to(message, "‚èÆÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–∏–π —Ç—Ä–µ–∫!")
            except Exception as e:
                self.bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç—Ä–µ–∫–∞: {str(e)}")

        # –ö–æ–º–∞–Ω–¥–∞ /network
        @self.bot.message_handler(commands=['network'])
        @admin_required
        def network_command(message):
            try:
                network = self.pc_controller.get_network_info()
                self.bot.reply_to(message, f"üåê –°–µ—Ç–µ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n{network}")
            except Exception as e:
                self.bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ç–µ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {str(e)}")

        # –ö–æ–º–∞–Ω–¥–∞ /files
        @self.bot.message_handler(commands=['files'])
        @admin_required
        def files_command(message):
            try:
                # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
                text = message.text.split(' ', 1)
                if len(text) < 2:
                    self.bot.reply_to(message, "üìÅ –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ. –ü—Ä–∏–º–µ—Ä: /files C:\\")
                    return
                
                directory = text[1].strip()
                files = self.pc_controller.list_files(directory)
                
                if files:
                    files_text = "\n".join(files[:20])  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 20 —Ñ–∞–π–ª–æ–≤
                    if len(files) > 20:
                        files_text += f"\n... –∏ –µ—â–µ {len(files) - 20} —Ñ–∞–π–ª–æ–≤"
                    self.bot.reply_to(message, f"üìÇ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏ {directory}:\n\n{files_text}")
                else:
                    self.bot.reply_to(message, "üìÇ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞ –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
            except Exception as e:
                self.bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤: {str(e)}")

        # –ö–æ–º–∞–Ω–¥–∞ /open
        @self.bot.message_handler(commands=['open'])
        @admin_required
        def open_command(message):
            try:
                # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
                text = message.text.split(' ', 1)
                if len(text) < 2:
                    self.bot.reply_to(message, "üìÅ –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É. –ü—Ä–∏–º–µ—Ä: /open C:\\file.txt")
                    return
                
                file_path = text[1].strip()
                self.pc_controller.open_file(file_path)
                self.bot.reply_to(message, f"üìÇ –§–∞–π–ª {file_path} –æ—Ç–∫—Ä—ã—Ç!")
            except Exception as e:
                self.bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞: {str(e)}")

        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        @self.bot.message_handler(func=lambda message: True)
        def unknown_command(message):
            self.bot.reply_to(message, "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.")

    def start(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        if self.running:
            logger.warning("–ë–æ—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω")
            return
            
        self.running = True
        logger.info("Telegram –±–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
        
        def polling_worker():
            try:
                self.bot.polling(none_stop=True, interval=1, timeout=20)
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –≤ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞: {e}")
                self.running = False
        
        self.polling_thread = threading.Thread(target=polling_worker, daemon=True)
        self.polling_thread.start()
        logger.info("Telegram –±–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")

    def stop(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞"""
        if not self.running:
            logger.warning("–ë–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω")
            return
            
        self.running = False
        try:
            self.bot.stop_polling()
            logger.info("Telegram –±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–∞: {e}")

    def is_running(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞"""
        return self.running

# –î–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ - –µ—Å–ª–∏ —Ñ–∞–π–ª –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if __name__ == "__main__":
    # –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    try:
        from config import BOT_TOKEN, ADMIN_CHAT_ID
        
        bot_instance = TelegramBot(BOT_TOKEN, ADMIN_CHAT_ID)
        print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
        bot_instance.start()
        
        # –î–µ—Ä–∂–∏–º –≥–ª–∞–≤–Ω—ã–π –ø–æ—Ç–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã–º
        try:
            while bot_instance.is_running():
                time.sleep(1)
        except KeyboardInterrupt:
            print("–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...")
            bot_instance.stop()
            
    except ImportError:
        print("‚ùå –û—à–∏–±–∫–∞: –§–∞–π–ª config.py –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª config.py –Ω–∞ –æ—Å–Ω–æ–≤–µ config_example.py")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
