#!/usr/bin/env python3
"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–æ–π Telegram PC Controller
"""

import os
import sys
import winreg
import argparse

def get_script_path():
    """–ü–æ–ª—É—á–∏—Ç—å –ø—É—Ç—å –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É —Å–∫—Ä–∏–ø—Ç—É"""
    current_dir = os.path.dirname(os.path.abspath(__file__))
    return os.path.join(current_dir, "main.py")

def is_autostart_enabled():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞ –ª–∏ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞"""
    try:
        key = winreg.OpenKey(
            winreg.HKEY_CURRENT_USER,
            r"Software\Microsoft\Windows\CurrentVersion\Run",
            0,
            winreg.KEY_READ
        )
        try:
            winreg.QueryValueEx(key, "TelegramPCController")
            winreg.CloseKey(key)
            return True
        except FileNotFoundError:
            winreg.CloseKey(key)
            return False
    except Exception:
        return False

def enable_autostart():
    """–í–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏"""
    try:
        script_path = get_script_path()
        python_exe = sys.executable
        
        # –ö–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º --tray
        command = f'"{python_exe}" "{script_path}" --tray'
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Ä–µ–µ—Å—Ç—Ä
        key = winreg.OpenKey(
            winreg.HKEY_CURRENT_USER,
            r"Software\Microsoft\Windows\CurrentVersion\Run",
            0,
            winreg.KEY_SET_VALUE
        )
        winreg.SetValueEx(key, "TelegramPCController", 0, winreg.REG_SZ, command)
        winreg.CloseKey(key)
        
        print("‚úÖ –ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞")
        print(f"üìÅ –ö–æ–º–∞–Ω–¥–∞: {command}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏: {e}")
        return False

def disable_autostart():
    """–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏"""
    try:
        key = winreg.OpenKey(
            winreg.HKEY_CURRENT_USER,
            r"Software\Microsoft\Windows\CurrentVersion\Run",
            0,
            winreg.KEY_SET_VALUE
        )
        winreg.DeleteValue(key, "TelegramPCController")
        winreg.CloseKey(key)
        
        print("‚úÖ –ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏: {e}")
        return False

def check_status():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏"""
    enabled = is_autostart_enabled()
    status = "–≤–∫–ª—é—á–µ–Ω–∞" if enabled else "–æ—Ç–∫–ª—é—á–µ–Ω–∞"
    print(f"üîÑ –ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞: {status}")
    return enabled

def main():
    parser = argparse.ArgumentParser(description='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–æ–π Telegram PC Controller')
    parser.add_argument('--enable', action='store_true', help='–í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É')
    parser.add_argument('--disable', action='store_true', help='–û—Ç–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É')
    parser.add_argument('--status', action='store_true', help='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å')
    parser.add_argument('--toggle', action='store_true', help='–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É')
    
    args = parser.parse_args()
    
    if args.enable:
        enable_autostart()
    elif args.disable:
        disable_autostart()
    elif args.status:
        check_status()
    elif args.toggle:
        if is_autostart_enabled():
            disable_autostart()
        else:
            enable_autostart()
    else:
        # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é
        print("ü§ñ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–æ–π Telegram PC Controller")
        print("=" * 50)
        
        current_status = check_status()
        print()
        
        if current_status:
            print("1. –û—Ç–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É")
            print("2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å")
            print("0. –í—ã—Ö–æ–¥")
            
            choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (0-2): ").strip()
            
            if choice == "1":
                disable_autostart()
            elif choice == "2":
                check_status()
        else:
            print("1. –í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É")
            print("2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å") 
            print("0. –í—ã—Ö–æ–¥")
            
            choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (0-2): ").strip()
            
            if choice == "1":
                enable_autostart()
            elif choice == "2":
                check_status()

if __name__ == "__main__":
    main()
